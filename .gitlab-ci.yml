# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- publish
- build_functions


build_parser:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint:
    - ''
  script:
  - /kaniko/executor --context "${CI_PROJECT_DIR}/parser" --dockerfile "${CI_PROJECT_DIR}/parser/Dockerfile"
    --destination "${CI_REGISTRY_IMAGE}/parser:latest"
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    changes:
      - parser/**/*
 

build_spamai:
  stage: publish
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint:
    - ''
  script:
  - /kaniko/executor --context "${CI_PROJECT_DIR}/spam_ai" --dockerfile "${CI_PROJECT_DIR}/spam_ai/Dockerfile"
    --destination "${CI_REGISTRY_IMAGE}/spamai:latest"
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    changes:
      - spam_ai/**/*
 

npm_models:
  stage: publish
  image: node:16
  script:
    - cd models
    - npm install
    - npm run build
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}">.npmrc
    - npm publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - models/**/*


API_Metrics:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - appwrite deploy function --functionId 63a586a196b24923e0bd
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/API Metrics/**/*


GET_case_v1:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Case/GET/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 63a4fddf25de17a1d58b
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Case/GET/v1/**/*


GET_service_v1:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Service/GET/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 63a6cdddef3bbd180247
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Service/GET/v1/**/*

GET_service_v2:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Service/GET/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 6492c9a9ccf500f2220c
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Service/GET/v2/**/*


DELETE_spam_v1:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Spam/DELETE/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 63ada74449c5b6abe2d6
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Spam/DELETE/v1/**/*



GET_spam_v1:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Spam/GET/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 63bd31d263522d513abf
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Spam/GET/v1/**/*



POST_spam_v1:
  stage: build_functions
  image: node:16
  script:
    - npm i -g appwrite-cli && appwrite client --endpoint https://appwrite.jrbit.de/v1 --projectId $APPWRITE_PROJECT --key $APPWRITE_API_KEY
    - cd "functions/Spam/POST/v1"
    - npm install
    - npm run build
    - cd "$CI_PROJECT_DIR"
    - appwrite deploy function --functionId 63bd3c891af577cfa915
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - functions/Spam/POST/v1/**/*
